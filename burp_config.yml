# Use this template file to configure your scan.
# Comments and examples are marked by the # symbol. Examples are provided for each value.
# Enter the values after the colon for each parameter. Values requiring a list format use two spaces, a hyphen and then another space.

enterpriseServer:
  # Enter the URL for your Burp Suite Enterprise Edition server, including the port, if required.
  # url: 
  
  # Enter the API key for an API user with the "CI-driven scan initiator" role. See https://portswigger.net/burp/documentation/enterprise/integrate-ci-cd-platforms/ci-driven-scans/getting-started
  # apiKey: 

  # If your Burp Suite Enterprise Edition server is configured with a self-signed or private CA TLS certificate, you can include the public key certificate here.
  # This verifies the certificate received from your server, ensuring a secure connection for the transmission of the scan results.
  tlsCertificate: 
    # |-
    # -----BEGIN CERTIFICATE-----
    # XXXxxxXXX
    # -----END CERTIFICATE-----
site:
  # If you define a correlationId, you can view the progress and results of your scan in Burp Suite Enterprise Edition.
  # A new site is created in Burp Suite Enterprise Edition, and the correlation ID is used as the site name. You can use a maximum of 64 characters.
  correlationId: DevTecholuTion

  # Sets the location that Burp Scanner starts scanning from. Enter the URL prefixes as a list. If no protocol is specified, both HTTP and HTTPS will be scanned.
  startUrls: 
    - https://dev.techolution.com

  # Optional detailed scope configuration. See https://portswigger.net/burp/documentation/enterprise/working-with-sites/setting-site-scope

  # You can add other URL prefixes that you want to allow Burp Scanner to visit, entered as a list. The startUrls are already included automatically.
  # For example, you can add URL prefixes that are part of the same target web application but not contained under the startUrls, such as a subdomain.
  inScopeUrlPrefixes: 
  #  - https://subdomain.vulnerable-website.com/

  # You can exclude URL prefixes that you don't want Burp Scanner to visit. For example, you may want to exclude logout functionality or sections of your site you don't want to scan.
  outOfScopeUrlPrefixes: 
  #  - https://vulnerable-website.com/logout

scanConfigurations:
  # Select from Burp Scanner's built-in scan configurations. Five preset "Crawl and Audit" scan modes are available to define how the scan balances speed and coverage.
  # For a list of the available configurations, see https://portswigger.net/burp/documentation/scanner/scan-configurations/burp-scanner-built-in-configs
  # If you apply multiple scan configurations, the settings from these configurations will be combined.
  # If settings in two or more scan configurations conflict, the setting from the lowest configuration in the list takes precedence.
  # Enter the names of the scan configurations as a list. The names are case-sensitive.
  builtIn: 
   - Crawl and Audit - CICD Optimized
  
  # You can use a custom scan configuration to fine-tune scan settings to meet your needs. 
  # Custom scan configurations can be created and exported in Burp Suite Enterprise Edition in JSON format. See https://portswigger.net/burp/documentation/enterprise/working-with-scans/scan-configurations
  # Enter the paths to each custom scan configuration JSON file as a list.
  custom: 
  #  - /path/custom-configuration.json

# Two application login methods are available; login credentials or recorded login sequences. Only one authentication method can be used per scan.
# See https://portswigger.net/burp/documentation/scanner/authenticated-scanning
logins:   
  # See https://portswigger.net/burp/documentation/scanner/authenticated-scanning/login-credentials
  # Enter username and password pairs as a list.
  loginCredentials: 
  #  - username: user1
  #    password: password1

  # To create a new recorded login sequence, see https://portswigger.net/burp/documentation/scanner/authenticated-scanning/recorded-login-sequences
  # Save the generated script as a JSON file and enter the path to the file as a list.
  recordedLogins: 
  #  - /path/recorded-login.json

reporting:
  # You can ignore specific vulnerabilities for specific paths, to prevent a build from failing. Burp Scanner still looks for these vulnerabilities and records them in the results.
  # For a list of all vulnerabilities detected by Burp Scanner, see https://portswigger.net/burp/documentation/scanner/vulnerabilities-list
  # Regular expressions are supported for paths. If you don't specify a path, the issue will be ignored everywhere.
  ignoredIssues: 
  #  - name: OS command injection
  #    paths:
  #    - https://website.com/path1
  #    - .*/api/v1
  #  - name: SQL injection
  #    paths:
  #    - https://website.com/path2
  #    - .*/api/[0-9]*

  # You can specify the scan report filename and the path the file is written to. Reports are in JUnit XML format. By default, burp_junit_report.xml and the scan container's working directory will be used.
  # To set your own path and filename, enter this as a list.
  reportFilePath: 
    - C:\Users\Hemanth Sahu\Desktop\BurpSuite\report-test.xml
  
  # The format of the reports outputted. Can be JUNIT or BURP_XML.
  # Burp XML report are written to the working directory as burp_xml_report.xml
  # Defaults to JUnit only.
  reportFormats:
  - JUNIT

  # Set the minimum severity and minimum confidence rules used to fail the build.
  # If Burp Scanner detects an issue with at least this severity and confidence, it instructs your CI/CD system to fail the build.
  # If you don't specify these parameters, the default values applied are LOW severity and TENTATIVE confidence. 
  threshold:    
    # The lowest severity issue required to fail the build. You can set this as INFO, LOW, MEDIUM, or HIGH.
    minimumSeverity: HIGH
    
    # The lowest confidence issue required to fail the build. You can set this as TENTATIVE, FIRM or CERTAIN.
    minimumConfidence: CERTAIN
    
    # Set to false to make the container exit with return code 0 (success) regardless of any issues the scan finds. 
    # This is useful if you want CI build steps to pass even if the scanner finds vulnerabilities.
    enabled: true

headersCookiesConfig:
  # Enter a list of additional request headers/cookies, including name, value and scope prefix
  #  - name: name1
  #    scopePrefix: scopePrefix1
  #    value: value1
  #  - name: name11
  #    scopePrefix: scopePrefix1
  #    value: value1
  headers:
  cookies:

platformAuthentication:
  # Enter a list of additional platform authentication details
  # - type: Choose from Basic, NTLM v1, or NTLM v2.
  #   destinationHost: localhost
  #   username: username
  #   password: password
  #   domain: domain - Only required for NTLM authentication
  #   domainHostname: hostname - Only required for NTLM authentication

proxies:
  # Enter a list of proxy server configurations
  # - authentication:
  #     type: Choose from None, Basic, NTLM v1, or NTLM v2.
  #     username: username
  #     password: password
  #     domain: domain
  #     domainHostname: hostname
  #   destinationHost: localHost
  #   proxyHost: host
  #   proxyPort: 8080
